name: CI

on: push

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the source code
        uses: actions/checkout@master

      - name: Install Rust stable
        run: |
          rustup toolchain update stable --no-self-update
          rustup default stable
          rustup component add clippy rustfmt

      - name: Run rustfmt
        run: cargo fmt -- --check

      - name: Run clippy
        run: cargo clippy --all -- -Dwarnings

  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the source code
        uses: actions/checkout@master

      - name: Install Rust stable
        run: |
          rustup toolchain update stable --no-self-update
          rustup default stable

      - name: Build
        run: cargo build --all

      - name: Test
        run: cargo test --all

      - name: Build (Release)
        run: cargo build --all --release

      - uses: actions/upload-artifact@master
        with:
          name: linux
          path: target/release/hemtt

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/hemtt
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_DOCKER_TOKEN }}

  build-macos:
    name: Build (macOS)
    runs-on: macos-latest
    steps:
      - name: Checkout the source code
        uses: actions/checkout@master

      - name: Install Rust stable
        run: |
          rustup toolchain update stable --no-self-update
          rustup default stable

      - name: Build
        run: cargo build --all

      - name: Test
        run: cargo test --all

      - name: Build (Release)
        run: cargo build --all --release

      - uses: actions/upload-artifact@master
        with:
          name: macos
          path: target/release/hemtt

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/hemtt
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_DOCKER_TOKEN }}

  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout the source code
        uses: actions/checkout@master

      - name: Install Rust stable
        run: |
          rustup toolchain update stable --no-self-update
          rustup default stable

      - name: Install OpenSSL
        run: |
          powershell -command "Invoke-WebRequest -Uri 'http://slproweb.com/download/Win64OpenSSL-1_1_1g.msi' -OutFile openssl.msi"
          msiexec.exe /qn /i openssl.msi

      - name: Build
        env:
          OPENSSL_DIR: C:\Program Files\OpenSSL-Win64
        run: cargo build --all

      - name: Test
        env:
          OPENSSL_DIR: C:\Program Files\OpenSSL-Win64
        run: cargo test --all

      - name: Build (Release)
        env:
          OPENSSL_DIR: C:\Program Files\OpenSSL-Win64
        run: cargo build --all --release

      - uses: actions/upload-artifact@master
        with:
          name: windows
          path: target/release/hemtt.exe

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/hemtt
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_DOCKER_TOKEN }}
