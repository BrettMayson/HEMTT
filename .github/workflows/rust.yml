name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the source code
        uses: actions/checkout@master

      - name: Install Rust stable
        run: |
          rustup toolchain update stable --no-self-update
          rustup default stable
          rustup component add clippy rustfmt

      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features -- -D warnings

      - name: rustfmt
        run: cargo fmt -- --check

  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the source code
        uses: actions/checkout@master

      - name: Install Rust stable
        run: |
          rustup toolchain update stable --no-self-update
          rustup default stable

      - name: Build
        run: cargo build --all

      - name: Test
        run: cargo test --all

      - name: Build (Release)
        run: |
          cargo build --all --release
          mv target/release/hemtt target/release/hemtt-linux-x64

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: hemtt-linux-x64
          path: target/release/hemtt-linux-x64

  build-macos:
    name: Build (macOS)
    runs-on: macos-latest
    steps:
      - name: Checkout the source code
        uses: actions/checkout@master

      - name: Install Rust stable
        run: |
          rustup toolchain update stable --no-self-update
          rustup default stable

      - name: Build
        run: cargo build --all

      - name: Test
        run: cargo test --all

      - name: Build (Release)
        run: |
          cargo build --all --release
          mv target/release/hemtt target/release/hemtt-macos

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: hemtt-macos
          path: target/release/hemtt-macos

  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    env:
      OPENSSL_DIR: C:\Program Files\OpenSSL-Win64
    steps:
      - name: Checkout the source code
        uses: actions/checkout@master

      - name: Install OpenSSL
        run: choco install --no-progress openssl

      - name: Install Rust stable
        run: |
          rustup toolchain update stable --no-self-update
          rustup default stable

      - name: Build
        run: cargo build --all

      - name: Test
        run: cargo test --all

      - name: Build (Release)
        run: |
          cargo build --all --release
          move target/release/hemtt.exe target/release/hemtt-windows-x64.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: hemtt-windows-x64
          path: target/release/hemtt-windows-x64.exe

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs:
      - build-linux
      - build-macos
      - build-windows
    steps:
      - name: Download Linux x64
        uses: actions/download-artifact@v2
        with:
          name: hemtt-linux-x64
          path: release

      - name: Download macOS
        uses: actions/download-artifact@v2
        with:
          name: hemtt-macos
          path: release

      - name: Download Windows x64
        uses: actions/download-artifact@v2
        with:
          name: hemtt-windows-x64
          path: release

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/*
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
